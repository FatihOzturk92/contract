// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using amorphie.contract.data.Contexts;

#nullable disable

namespace amorphie.contract.data.Migrations.Pg
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20230516084359_MyMigration")]
    partial class MyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("amorphie.contract.core.Entity.Common.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("Language", "Common");
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinition", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("LanguageId1")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.HasKey("LanguageId");

                    b.HasIndex("Code");

                    b.HasIndex("LanguageId1");

                    b.ToTable("Document", "Definition");
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinitionTemplate", b =>
                {
                    b.Property<Guid>("LanguageId")
                        .HasMaxLength(36)
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentDefinitionId")
                        .HasMaxLength(36)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LanguageId", "DocumentDefinitionId");

                    b.HasIndex("DocumentDefinitionId");

                    b.ToTable("DocumentTemplate", "Definition");
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinitionType", b =>
                {
                    b.Property<Guid>("DocumentDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36)
                        .HasColumnType("uuid");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CreatedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DocumentDefinitionLanguageId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ModifiedByBehalfOf")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DocumentDefinitionId");

                    b.HasIndex("DocumentDefinitionLanguageId");

                    b.ToTable("DocumentType", "Definition");
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinition", b =>
                {
                    b.HasOne("amorphie.contract.core.Entity.Common.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinitionTemplate", b =>
                {
                    b.HasOne("amorphie.contract.core.Entity.Definition.DocumentDefinition", null)
                        .WithMany("DocumentDefinitionTemplate")
                        .HasForeignKey("DocumentDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinitionType", b =>
                {
                    b.HasOne("amorphie.contract.core.Entity.Definition.DocumentDefinition", null)
                        .WithMany("DocumentDefinitionType")
                        .HasForeignKey("DocumentDefinitionLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("amorphie.contract.core.Entity.Definition.DocumentDefinition", b =>
                {
                    b.Navigation("DocumentDefinitionTemplate");

                    b.Navigation("DocumentDefinitionType");
                });
#pragma warning restore 612, 618
        }
    }
}
